---
title: "lobster exploration"
format: html
editor: visual
---

```{r}
library(here)
library(tidyverse)
library(janitor)
```

-   count gets you from case to frequency format, uncount gets you from frequency to count

    ```{r}
    lobsters <- read_csv(here("data","Lobster_Abundance_All_Years_20210412.csv"), na = c("-99999", "")) %>% 
      clean_names() %>% 
      uncount(count)

    ```

    ```{r}
    lobster_test<-read_csv(here("data","Lobster_Abundance_All_Years_20210412.csv"), na = c("-99999", "")) %>% 
      clean_names() 
    ```

### **Find counts and mean sizes by site & year**

-   Create a summary table that finds the total counts (see: `n()`), and mean carapace lengths of lobsters observed in the dataset by **site** and **year**.

```{r}
lobster_summary <- lobsters %>% group_by(site, year) %>% 
  summarize(total_count = n(),
            length_mean = mean(size_mm, na.rm = TRUE))
```

-   Create a ggplot graph of the number of total lobsters observed (y-axis) by year (x-axis) in the study, grouped (either aesthetically or by faceting) by site

```{r}
ggplot(data = lobster_summary, aes(x = year, y = total_count))+ 
  geom_point()+
  facet_wrap(vars(site))
```

```{r}
ggplot(data = lobster_summary, aes(x = year, y = total_count))+ 
  geom_point(aes(color= site))
 
```

### **Find the proportion of legal lobsters at each site for 2020**

The legal lobster size (carapace length) in California is 79.76 mm.

-   Create a subset that only contains lobster data from 2020 (note: this should be from the original data you read in, not the summary table you created above)

```{r}
legal_lobster <- lobsters %>% filter(year == 2020)
```

-   Write code (you can decide how to do this - there are a number of ways) to find the counts of lobsters observed at each site (only using site as the grouping factor) that are above and below the legal limit. **Hint:** You may want to add a new column`legal` that contains \"yes\" or \"no\" based on the size of the observed lobster (see `dplyr::case_when()` for a really nice way to do this), then use `group_by() %>% summarize(n())` or `dplyr::count()` to get counts by group within variables

```{r}
lobster_count <- legal_lobster %>% 
 mutate(legal= case_when(
  size_mm > 79.76 ~ "YES",
  size_mm < 79.76 ~ "NO"
)) %>% group_by(site,legal) %>% 
  summarize(count = n())
```

-   Create a stacked column graph that shows the *proportion* of legal and non-legal lobsters at each site. \*\*Hint: create a stacked column graph with `geom_col()`, then add the argument `position = "fill"` to convert from a graph of absolute counts to proportions.

```{r}
ggplot(data = lobster_count, aes(x= site,y = count, fill = legal)) +
  geom_col(position = "fill")
```

Which two sites had the largest proportion of legal lobsters in 2020? Explore the metadata to come up with a hypothesis about why that might be.

NAPL and IVEE had the largest proportion of legal lobsters in 2020.

## **Task 3: Random lobster wrangling**

Starting with the original lobsters data that you read in as `lobsters`, complete the following (separately - these are not expected to be done in sequence or anything). You can store each of the outputs as `ex_a`, `ex_b`, etc. for the purposes of this task.

### **filter() practice**

1.  Create and store a subset that only contains lobsters from sites \"IVEE\", \"CARP\" and \"NAPL\". Check your output data frame to ensure that only those three sites exist.

```{r}
lobster_subset1 <- lobsters %>% filter(site =="IVEE"| site == "CARP"| site == "NAPL")
unique(lobster_subset1$site)
```

1.  Create a subset that only contains lobsters observed in August.

```{r}
lobster_subset2<- lobsters %>% filter(month == 8)
unique(lobster_subset2$month)
```

1.  Create a subset with lobsters at Arroyo Quemado (AQUE) **OR** with a carapace length greater than 70 mm.

```{r}
lobster_subset3 <- lobsters %>% filter(site == "AQUE" | size_mm >70)

```

1.  Create a subset that does NOT include observations from Naples Reef (NAPL)

```{r}
lobster_subset4 <- lobsters %>% filter(site!= "NAPL")
unique(lobster_subset4$site)
```

### **group_by() %\>% summarize() practice**

5.  Find the mean and standard deviation of lobster carapace length, grouped by site.

```{r}
lobster_subset5 <-lobsters %>% group_by(site) %>% 
  summarize(mean_size = mean(size_mm, na.rm = TRUE),
            sd_size = sd(size_mm, na.rm = TRUE))
```

5.  Find the maximum carapace length by site and month.

```{r}
lobster_subset6 <- lobsters %>% group_by(site, month) %>% 
  summarize(max_size = max(size_mm, na.rm= TRUE))
```

### **mutate() practice**

7.  Add a new column that contains lobster carapace length converted to centimeters. Check output.

```{r}
lobster_subset7 <- lobsters %>% mutate(size_cm = size_mm /10)
```

7.  Update the site column to all lowercase. Check output.

```{r}
lobster_subset8 <- lobsters %>% mutate(site= tolower(site))

```

7.  Convert the area column to a character (not sure why you\'d want to do this, but try it anyway). Check output.

```{r}
lobster_subset9<- lobsters %>% mutate(area= as.character(area))
is.character(lobster_subset9$area)
```

### **case_when() practice**

10. Use `case_when()` to add a new column called `size_bin` that contains \"small\" if carapace size is \<= 70 mm, or \"large\" if it is greater than 70 mm. Check output.

```{r}
lobster_subset10<- lobsters %>% mutate(size_bin= case_when(
  size_mm<= 70 ~ "Small",
  size_mm >70 ~ "Large"
))
```

10. Use `case_when()` to add a new column called `designation` that contains \"MPA\" if the site is \"IVEE\" or \"NAPL\", and \"not MPA\" for all other outcomes.

```{r}
lobster_subset11 <- lobsters %>% mutate(designation= case_when(
  site %in% c("IVEE","NAPL") ~ "MPA",
  TRUE ~ "not MPA"
))
```
